{"version":3,"sources":["libs/http.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/Modal/index.jsx","components/Modal/Modal.module.scss","components/CreatePost/CreatePost.module.scss","components/CreatePost/index.jsx","pages/NewPost/index.jsx"],"names":["BASE_URL","http","resource","fetch","then","response","json","httpPOST","data","method","headers","body","JSON","stringify","httpDELETE","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Modal","bgColor","text","className","styles","style","background","module","exports","CreatePost","useState","authorInput","setAuthorInput","imgInput","setImgInput","messageInput","setMessageInput","formPostObj","setFormPostObj","isModalVisible","setModalVisibile","useEffect","author","date","Date","toISOString","photo","createPost","__author","value","onChange","e","target","name","id","type","placeholder","required","onClick","event","preventDefault","setTimeout","cols","rows","NewPost"],"mappings":"2OAAMA,EAAW,yCAGXC,EAAO,SAACC,GAAD,OAAcC,MAAMH,EAAWE,GAC3CE,MAAK,SAACC,GAAD,OAAaA,EAASC,WAEtBC,EAAW,SAACL,EAAUM,GAAX,OACjBL,MAAMH,EAAWE,EAAU,CACvBO,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUL,KAExBJ,MAAK,SAACC,GAAD,OAAaA,EAASC,WAGtBQ,EAAa,SAACZ,GAAD,OACnBC,MAAMH,EAAWE,EAAU,CACvBO,OAAQ,SACRC,QAAS,CACL,eAAgB,sBAGvBN,MAAK,SAACC,GAAD,OAAaA,EAASC,Y,wFCpBb,SAASS,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,K,gCIL9F,4BAUeC,IARD,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KACxB,OACE,qBAAKC,UAAWC,IAAOJ,MAAOK,MAAO,CAAEC,WAAW,GAAD,OAAKL,IAAtD,SACE,4BAAIC,Q,mBCJVK,EAAOC,QAAU,CAAC,MAAQ,uB,mBCA1BD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,SAAW,+B,iGCKnEC,EAAa,WACjB,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwCJ,mBAAS,IAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAsCN,mBAAS,IAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAA2CR,oBAAS,GAApD,mBAAOS,EAAP,KAAuBC,EAAvB,KAqBA,OATAC,qBAAU,WACRH,EAAe,CACbI,OAAQX,EACRT,KAAMa,EACNQ,MAAM,IAAIC,MAAOC,cACjBC,MAAOb,MAER,CAACF,EAAaE,EAAUE,IAGzB,sBAAKZ,UAAWC,IAAOuB,WAAvB,UACGR,GACC,cAACnB,EAAA,EAAD,CAAOC,QAAQ,eAAeC,KAAK,gCAGrC,iCACE,sBAAKC,UAAWC,IAAOwB,SAAvB,UACE,uBACEC,MAAOlB,EACPmB,SAAU,SAACC,GAAD,OAAOnB,EAAemB,EAAEC,OAAOH,QACzCI,KAAK,SACLC,GAAG,SACHC,KAAK,OACLC,YAAY,SACZC,UAAQ,IAGV,uBACEP,SAAU,SAACC,GAAD,OAAOjB,EAAYiB,EAAEC,OAAOH,QACtCA,MAAOhB,EACPoB,KAAK,MACLC,GAAG,MACHC,KAAK,OACLC,YAAY,YAGd,wBAAQD,KAAK,SAASG,QA9CR,SAACC,GACrBA,EAAMC,iBACN5D,YAAS,SAAUqC,GACnBG,GAAiB,GAEjBqB,YAAW,WACTrB,GAAiB,KAChB,MAuCG,qBAKF,0BACES,MAAOd,EACPe,SAAU,SAACC,GAAD,OAAOf,EAAgBe,EAAEC,OAAOH,QAC1CI,KAAK,UACLC,GAAG,UACHQ,KAAK,KACLC,KAAK,KACLP,YAAY,UACZC,UAAQ,WClEHO,UAJC,WACd,OAAO,cAAC,EAAD","file":"static/js/5.879dad16.chunk.js","sourcesContent":["const BASE_URL = 'https://edgemony-backend.herokuapp.com';\n\n\nconst http = (resource) => fetch(BASE_URL + resource)\n.then((response)=> response.json());\n\nconst httpPOST = (resource, data) => \nfetch(BASE_URL + resource, {\n    method: 'POST',\n    headers: {\n        \"Content-type\": \"application/json\"\n    },\n    body: JSON.stringify(data),\n})\n.then((response)=> response.json());\n\n\nconst httpDELETE = (resource) => \nfetch(BASE_URL + resource, {\n    method: 'DELETE',\n    headers: {\n        \"Content-type\": \"application/json\"\n    },\n})\n.then((response)=> response.json());\n\n// Popola la lista degli amici, in base alla lista friendsNames\nconst fillFriendsList = (friendsNames) => {\n    let value = 0;\n    for (value in [...Array(friendsNames.length).keys()]) {\n      httpPOST(\"/friends\", {\n        name: friendsNames[value],\n        photo: `https://randomuser.me/api/portraits/men/${value}.jpg`,\n      });\n  \n      setTimeout(() => {}, 100);\n    }\n  };\n  \n\nexport { http, httpPOST, httpDELETE, fillFriendsList }","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import styles from \"./Modal.module.scss\";\n\nconst Modal = ({ bgColor, text }) => {\n  return (\n    <div className={styles.Modal} style={{ background: `${bgColor}` }}>\n      <p>{text}</p>\n    </div>\n  );\n};\n\nexport default Modal;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__32mLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createPost\":\"CreatePost_createPost__3XCbM\",\"__author\":\"CreatePost___author__2lcbm\"};","import { useState, useEffect } from \"react\";\nimport { httpPOST } from \"../../libs/http\";\n\nimport Modal from \"./../Modal\";\nimport styles from \"./CreatePost.module.scss\";\n\nconst CreatePost = () => {\n  const [authorInput, setAuthorInput] = useState(\"\");\n  const [imgInput, setImgInput] = useState(\"\");\n  const [messageInput, setMessageInput] = useState(\"\");\n  const [formPostObj, setFormPostObj] = useState({});\n  const [isModalVisible, setModalVisibile] = useState(false);\n\n  const handleSendBtn = (event) => {\n    event.preventDefault();\n    httpPOST(\"/posts\", formPostObj);\n    setModalVisibile(true);\n\n    setTimeout(() => {\n      setModalVisibile(false);\n    }, 3000);\n  };\n\n  useEffect(() => {\n    setFormPostObj({\n      author: authorInput,\n      text: messageInput,\n      date: new Date().toISOString(),\n      photo: imgInput,\n    });\n  }, [authorInput, imgInput, messageInput]);\n\n  return (\n    <div className={styles.createPost}>\n      {isModalVisible && (\n        <Modal bgColor=\"lightskyblue\" text=\"Il post Ã¨ stato aggiunto\" />\n      )}\n\n      <form>\n        <div className={styles.__author}>\n          <input\n            value={authorInput}\n            onChange={(e) => setAuthorInput(e.target.value)}\n            name=\"author\"\n            id=\"author\"\n            type=\"text\"\n            placeholder=\"Author\"\n            required\n          />\n\n          <input\n            onChange={(e) => setImgInput(e.target.value)}\n            value={imgInput}\n            name=\"img\"\n            id=\"img\"\n            type=\"text\"\n            placeholder=\"Img URL\"\n          />\n\n          <button type=\"submit\" onClick={handleSendBtn}>\n            SEND\n          </button>\n        </div>\n\n        <textarea\n          value={messageInput}\n          onChange={(e) => setMessageInput(e.target.value)}\n          name=\"message\"\n          id=\"message\"\n          cols=\"30\"\n          rows=\"10\"\n          placeholder=\"Message\"\n          required\n        ></textarea>\n      </form>\n    </div>\n  );\n};\n\nexport { CreatePost };\n","import {CreatePost } from \"../../components/CreatePost\";\n\nconst NewPost = () => {\n  return <CreatePost />;\n};\n\nexport default NewPost;\n"],"sourceRoot":""}